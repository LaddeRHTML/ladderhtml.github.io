{"version":3,"sources":["Components/hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Content/MyPosts/Post/post.module.scss","Components/Content/MyPosts/posts.module.scss","Components/Content/ProfileInfo/profileInfo.module.scss","redux/selector/profileSelector.js","Components/Content/MyPosts/Post/index.js","Components/Content/MyPosts/Post/post.js","Components/Content/MyPosts/index.js","Components/Content/MyPosts/posts.js","Components/Content/ProfileInfo/ProfileStatus/profileStatusWithHooks.js","Components/Content/ProfileInfo/profileInfo.js","Components/Content/Profile/index.js","Components/Content/Profile/profile.js","Components/Content/profileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","authReducer","withAuthRedirect","Component","connect","props","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","postsSelector","profileReducer","posts","newPostTextSelector","newPostText","profileSelector","profile","statusSelector","status","editModeSelector","editMode","Post","message","likes","className","postStyle","post","head","avatar","src","alt","right","name","href","time","footer","like","Posts","React","memo","newPosts","map","p","id","ProfileStatusWithHooks","updateStatus","useState","changeEditMode","setStatus","useEffect","toggleEditMode","boolean","autoFocus","onBlur","onChange","e","currentTarget","onClick","maxLength","maxLengthCreator","PostsForm","handleSubmit","onSubmit","pStyle","profileFooter__postwrite","Field","component","TextArea","type","placeholder","validate","requiredField","reduxForm","form","ProfileInfo","statusEditMode","toggleEditModeStatus","newStatusText","addPost","profileInfo","photos","small","profileInner","profileHeader__name","fullName","profileHeader__status","profileFooter","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","vk","instagram","values","postInput","Profile","this","setProfile","userId","match","params","changePostText","compose","isAuthSelector","userIdSelector","getProfile","withRouter"],"mappings":"yLAKIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,YAAYD,SAGjBE,EAAmB,SAACC,GAO7B,OADqCC,YAAQN,EAARM,EALT,SAACC,GACzB,OAAKA,EAAML,OAEJ,cAACG,EAAD,eAAeE,IAFI,cAAC,IAAD,CAAUC,GAAI,gB,+ECPjC,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,qBAAqB,KAAO,mBAAmB,KAAO,mBAAmB,QAAU,sBAAsB,OAAS,qBAAqB,MAAQ,oBAAoB,KAAO,qB,oBCArRD,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,4BAA4B,aAAe,kCAAkC,cAAgB,mCAAmC,yBAA2B,8CAA8C,oBAAsB,yCAAyC,sBAAwB,6C,qFCD7VC,EAAgB,SAACjC,GAC1B,OAAOA,EAAMkC,eAAeC,OAEnBC,EAAsB,SAACpC,GAChC,OAAOA,EAAMkC,eAAeG,aAEnBC,EAAkB,SAACtC,GAC5B,OAAOA,EAAMkC,eAAeK,SAEnBC,EAAiB,SAACxC,GAC3B,OAAOA,EAAMkC,eAAeO,QAEnBC,EAAmB,SAAC1C,GAC7B,OAAOA,EAAMkC,eAAeS,U,kFCZjBC,ECCF,SAACtC,GAAW,IACduC,EAAkBvC,EAAlBuC,QAASC,EAASxC,EAATwC,MAChB,OACQ,sBAAKC,UAAWC,IAAUC,KAA1B,UACI,sBAAKF,UAAWC,IAAUE,KAA1B,UACI,qBAAKH,UAAWC,IAAUG,OAA1B,SACI,qBAAKC,IAAI,+LAA+LC,IAAI,mBAEhN,sBAAKN,UAAWC,IAAUM,MAA1B,UACI,mBAAGP,UAAWC,IAAUO,KAAMC,KAAK,IAAnC,4CACA,mBAAGT,UAAWC,IAAUS,KAAMD,KAAK,IAAnC,2EAGR,qBAAKT,UAAWC,IAAUH,QAA1B,SACKA,IAEL,qBAAKE,UAAWC,IAAUU,OAA1B,SACI,sBAAKX,UAAWC,IAAUF,MAA1B,UACI,wBAAQC,UAAWC,IAAUW,OAAO,8BAAMb,a,kBCnBnDc,ECEDC,IAAMC,MAAK,SAAAxD,GAAU,IAE3ByD,EADUzD,EAAT6B,MACgB6B,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAiBC,GAAID,EAAEC,GAAIrB,QAASoB,EAAEpB,QAASC,MAAOmB,EAAEnB,OAA7CmB,EAAEC,OAC3C,OACI,qBAAKnB,UAAWkB,IAAE9B,MAAlB,SACK4B,O,sDC0DEI,EAjEgB,SAAC7D,GAAW,IAYhC8D,EAAgB9D,EAAhB8D,aAZgC,EAwBNC,oBAAS,GAxBH,mBAwBlC1B,EAxBkC,KAwBxB2B,EAxBwB,OAyBbD,mBAAS/D,EAAMmC,QAzBF,mBAyBlCA,EAzBkC,KAyB1B8B,EAzB0B,KA2BvCC,qBAAU,WACND,EAAUjE,EAAMmC,UACjB,CAACnC,EAAMmC,SAGV,IAAMgC,EAAiB,SAACC,GACpBJ,EAAeI,IAenB,OACI,qBAAK3B,UAAU,SAAf,SACMJ,EACE,8BACI,uBAAOgC,WAAS,EAACC,OAVf,WAEdH,GAAe,GACfL,EAAa3B,IAOmCf,MAAOe,EAAQoC,SAhBnD,SAACC,GACbP,EAAUO,EAAEC,cAAcrD,YAkBlB,qBAAKsD,QAAS,kBAAKP,GAAe,IAAlC,SACI,+BACKhC,GAAkB,2G,gBClDrCwC,EAAYC,YAAiB,KAC/BC,EAAY,YAAuB,IAApBC,EAAmB,EAAnBA,aACf,OACI,uBAAMC,SAAUD,EAAcrC,UAAWuC,IAAOC,yBAAhD,UACI,cAACC,EAAA,EAAD,CACIjC,KAAK,YACLkC,UAAWC,IACXC,KAAK,OACLC,YAAY,wHACZC,SAAU,CAACC,IAAeb,KAE9B,wBAAQU,KAAK,SAAb,0FAKZR,EAAYY,YAAU,CAClBC,KAAM,aADED,CAETZ,GACH,IAkCec,EAlCK,SAAC,GAAmG,IAAlGxD,EAAiG,EAAjGA,OAAQyD,EAAyF,EAAzFA,eAAgBC,EAAyE,EAAzEA,qBAAsBC,EAAmD,EAAnDA,cAAehC,EAAoC,EAApCA,aAAciC,EAAsB,EAAtBA,QAAS9D,EAAa,EAAbA,QAKtG,OAAKA,EAID,sBAAKQ,UAAWuC,IAAOgB,YAAvB,UACI,qBAAKvD,UAAWuC,IAAOnC,OAAvB,SACI,qBAAKC,IAA6B,MAAxBb,EAAQgE,OAAOC,MAAgBjE,EAAQgE,OAAOC,MAAQ,2CAA4CnD,IAAI,eAEpH,sBAAKN,UAAWuC,IAAOmB,aAAvB,UACI,sBAAK1D,UAAU,gBAAf,UACI,qBAAKA,UAAWuC,IAAOoB,oBAAvB,SACKnE,EAAQoE,WAEb,qBAAK5D,UAAWuC,IAAOsB,sBAAvB,SACI,cAAC,EAAD,CAAwBnE,OAAQA,EAAQE,SAAUuD,EAAgBzB,eAAgB0B,EAAsBC,cAAeA,EAAehC,aAAcA,SAG5J,sBAAKrB,UAAWuC,IAAOuB,cAAvB,UACwB,MAAnBtE,EAAQuE,QAAkB,qCAAcvE,EAAQuE,SACrB,IAA3BvE,EAAQwE,eAA2B,kCAAW,qBACT,MAArCxE,EAAQyE,0BAAoC,qCAAczE,EAAQyE,0BAC3C,MAAvBzE,EAAQ0E,SAASC,GAAa,qCAAc3E,EAAQ0E,SAASC,GAC/B,MAA9B3E,EAAQ0E,SAASE,UAAoB,qCAAc5E,EAAQ0E,SAASE,aAEzE,cAAC,EAAD,CAAW9B,SA3BN,SAAC+B,GACdf,EAAQe,EAAOC,oBAGP,cAAC,IAAD,KChCDC,E,uKCIX,WACI,IAAMhH,EAAQiH,KAAKjH,MACZkH,EAAgClH,EAAhCkH,WAAYjD,EAAoBjE,EAApBiE,UAEfkD,EAFmCnH,EAAToH,MAEXC,OAAOF,OACrBA,IACDA,EAASnH,EAAMmH,QAEnBD,EAAWC,GACXlD,EAAUkD,K,oBAEd,WACI,IAAMnH,EAAQiH,KAAKjH,MACX+F,EAAyD/F,EAAzD+F,QAASuB,EAAgDtH,EAAhDsH,eAAgBvF,EAAgC/B,EAAhC+B,YAAaE,EAAmBjC,EAAnBiC,QAASJ,EAAU7B,EAAV6B,MAChDM,EAAiEnC,EAAjEmC,OAAQE,EAAyDrC,EAAzDqC,SAAU8B,EAA+CnE,EAA/CmE,eAAgB2B,EAA+B9F,EAA/B8F,cAAehC,EAAgB9D,EAAhB8D,aACxD,OACI,gCACI,cAAC,EAAD,CAAaiC,QAASA,EAASuB,eAAgBA,EAAgBvF,YAAaA,EAAaE,QAASA,EAASE,OAAQA,EAAQyD,eAAgBvD,EAAUwD,qBAAsB1B,EAAgB2B,cAAeA,EAAehC,aAAcA,IACvO,cAAC,EAAD,CAAOjC,MAAOA,W,GAnBR/B,aCePyH,sBACXxH,aAZkB,SAACL,GACnB,MAAO,CACHmC,MAAOF,EAAcjC,GACrBqC,YAAaD,EAAoBpC,GACjCuC,QAASD,EAAgBtC,GACzByC,OAAQD,EAAexC,GACvB2C,SAAUD,EAAiB1C,GAC3BC,OAAO6H,YAAe9H,GACtByH,OAAQM,YAAe/H,MAIF,CAACqG,YAAQuB,mBAAgBI,eAAYvD,mBAAgB2B,kBAAeoB,eAAYjD,cAAWH,mBACpH6D,IACA9H,IAHW0H,CAIbP","file":"static/js/3.a60e8979.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let authRedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={'/login'} />\r\n        \r\n        return <Component {...props}/>\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(authRedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__15KVg\",\"head\":\"post_head__LDpoy\",\"right\":\"post_right__2rAAv\",\"avatar\":\"post_avatar__3m-Wn\",\"name\":\"post_name__2qvA2\",\"link\":\"post_link__1Ai1y\",\"message\":\"post_message__3u9rH\",\"footer\":\"post_footer__3lim3\",\"likes\":\"post_likes__axT9W\",\"like\":\"post_like__3kSaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"posts_posts__RT5fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"profileInfo_profileInfo__3fSaH\",\"avatar\":\"profileInfo_avatar__1gR6k\",\"profileInner\":\"profileInfo_profileInner__YMXLJ\",\"profileFooter\":\"profileInfo_profileFooter__3zR4c\",\"profileFooter__postwrite\":\"profileInfo_profileFooter__postwrite__295hf\",\"profileHeader__name\":\"profileInfo_profileHeader__name__3PaNT\",\"profileHeader__status\":\"profileInfo_profileHeader__status__3aCJz\"};","export const postsSelector = (state) => {\r\n    return state.profileReducer.posts\r\n}\r\nexport const newPostTextSelector = (state) => {\r\n    return state.profileReducer.newPostText\r\n}\r\nexport const profileSelector = (state) => {\r\n    return state.profileReducer.profile\r\n}\r\nexport const statusSelector = (state) => {\r\n    return state.profileReducer.status\r\n}\r\nexport const editModeSelector = (state) => {\r\n    return state.profileReducer.editMode\r\n}\r\nexport const userIdSelector = (state) => {\r\n    return state.profileReducer.userId\r\n}","import Post from './post';\r\nexport default Post;","import React from 'react';\r\nimport postStyle from './post.module.scss'\r\nconst Post = (props) => {\r\n    const {message, likes} = props\r\n    return (\r\n            <div className={postStyle.post}>\r\n                <div className={postStyle.head}>\r\n                    <div className={postStyle.avatar}>\r\n                        <img src=\"https://sun1.beeline-kz.userapi.com/s/v1/ig2/Gq93xZbw39HuMKYlVsFSpP73e4jzjlHVv7qJmMoje5Bb1m_XDEmFjYtxd4IAZ4KiRbEOb1l-OSdp-zNA68FUG-uO.jpg?size=200x0&quality=96&crop=318,525,1163,1163&ava=1\" alt=\"myMiniAvatar\" />\r\n                    </div>\r\n                    <div className={postStyle.right}>\r\n                        <a className={postStyle.name} href=\"#\">Роман</a>\r\n                        <a className={postStyle.time} href=\"#\" >Сегодня в 13:37</a>\r\n                    </div>\r\n                </div>\r\n                <div className={postStyle.message}>\r\n                    {message}\r\n                </div>\r\n                <div className={postStyle.footer}>\r\n                    <div className={postStyle.likes}>\r\n                        <button className={postStyle.like}/><div>{likes}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Post;","import Posts from './posts';\r\nexport default Posts;","import React from 'react';\r\nimport Post from './Post';\r\nimport p from './posts.module.scss';\r\nconst Posts = React.memo(props => {\r\n    let {posts} = props;\r\n    let newPosts = posts.map(p => <Post key={p.id} id={p.id} message={p.message} likes={p.likes} />)\r\n    return (\r\n        <div className={p.posts}>\r\n            {newPosts}\r\n        </div>\r\n    )\r\n})\r\nexport default Posts;","import React, { useEffect, useState } from 'react';\r\nconst ProfileStatusWithHooks = (props) =>  {\r\n    /* state = {\r\n        status: '',\r\n        editMode: false\r\n    }\r\n    toggleEditMode = () => {\r\n        this.setState({...this.state, editMode: !this.state.editMode});\r\n    }\r\n    newStatusText = (text) => {\r\n        this.setState({...this.state, status: text});\r\n    } */\r\n    /* const { status, editMode, toggleEditMode, newStatusText,updateStatus} = props; */\r\n    const {updateStatus} = props;\r\n\r\n    /* let statusBar = React.createRef();\r\n    const getText = () => {\r\n        let text = statusBar.current.value;\r\n        newStatusText(text);\r\n    }\r\n    const newStatus = () => {\r\n        let text = statusBar.current.value;\r\n        toggleEditMode(false)\r\n        updateStatus(text);\r\n    } */\r\n    let [editMode, changeEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    /* debugger */\r\n    const toggleEditMode = (boolean) => {\r\n        changeEditMode(boolean);\r\n    }\r\n\r\n    const getText = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n        /* let text = statusBar.current.value; */\r\n        /* newStatusText(text); */\r\n    }\r\n\r\n    const newStatus = () => {\r\n        /* let text = statusBar.current.value; */\r\n        toggleEditMode(false)\r\n        updateStatus(status);\r\n    }\r\n\r\n    return (\r\n        <div className=\"status\">\r\n            { editMode ? \r\n                <div>\r\n                    <input autoFocus onBlur={newStatus} value={status} onChange={getText}></input>\r\n                </div>\r\n                : \r\n                <div onClick={()=> toggleEditMode(true)}>\r\n                    <span>\r\n                        {status ? status : 'Установить статус'}\r\n                    </span>\r\n                </div> \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport Loading from '../../../common/loading/loading';\r\nimport pStyle from './profileInfo.module.scss';\r\nimport ProfileStatusWithHooks from './ProfileStatus/profileStatusWithHooks';\r\nimport {maxLengthCreator, requiredField} from '../../../utils/validator';\r\nimport { TextArea } from '../../../common/Textarea/formChilds';\r\n\r\nconst maxLength = maxLengthCreator(100);\r\nlet PostsForm = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={pStyle.profileFooter__postwrite}>\r\n            <Field\r\n                name=\"postInput\"\r\n                component={TextArea}\r\n                type=\"text\"\r\n                placeholder=\"Чем хотите поделиться?\"\r\n                validate={[requiredField, maxLength]}\r\n            />\r\n            <button type=\"sumbit\" >Опубликовать</button>\r\n        </form>\r\n        \r\n    )\r\n}\r\nPostsForm = reduxForm({\r\n    form: 'post-form'\r\n})(PostsForm)\r\nconst ProfileInfo = ({status, statusEditMode, toggleEditModeStatus, newStatusText, updateStatus, addPost, profile}) => {\r\n\r\n    let addNewPost = (values) => {\r\n        addPost(values.postInput);\r\n    }\r\n    if (!profile) {\r\n        return (<Loading/>)\r\n    }\r\n    return (\r\n        <div className={pStyle.profileInfo}>\r\n            <div className={pStyle.avatar}>\r\n                <img src={profile.photos.small != null ? profile.photos.small : 'https://html5css.ru/w3images/avatar2.png'} alt=\"myAvatar\" />\r\n            </div>\r\n            <div className={pStyle.profileInner}>\r\n                <div className=\"profileHeader\">\r\n                    <div className={pStyle.profileHeader__name}>\r\n                        {profile.fullName}\r\n                    </div>\r\n                    <div className={pStyle.profileHeader__status}>\r\n                        <ProfileStatusWithHooks status={status} editMode={statusEditMode} toggleEditMode={toggleEditModeStatus} newStatusText={newStatusText} updateStatus={updateStatus}/>\r\n                    </div>\r\n                </div>\r\n                <div className={pStyle.profileFooter}>\r\n                    {profile.aboutMe == null ? 'Пусто - 1' : profile.aboutMe}\r\n                    {profile.lookingForAJob === false ? 'Не ищу' : 'Ищу'}\r\n                    {profile.lookingForAJobDescription == null ? 'Пусто - 3' : profile.lookingForAJobDescription}\r\n                    {profile.contacts.vk == null ? 'Пусто - 4' : profile.contacts.vk}\r\n                    {profile.contacts.instagram == null ? 'Пусто - 5' : profile.contacts.instagram }\r\n                </div>\r\n                <PostsForm onSubmit={addNewPost} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import Profile from './profile';\r\nexport default Profile;","import {Component} from 'react';\r\nimport Posts from '../MyPosts';\r\nimport ProfileInfo from '../ProfileInfo/profileInfo';\r\n\r\nclass Profile extends Component {\r\n    componentDidMount() {\r\n        const props = this.props;\r\n        const {setProfile, setStatus, match} = props;\r\n        \r\n        let userId = match.params.userId;\r\n        if (!userId) {\r\n            userId = props.userId;\r\n        }\r\n        setProfile(userId);\r\n        setStatus(userId);\r\n    }\r\n    render () {\r\n        const props = this.props;\r\n        const { addPost, changePostText, newPostText, profile, posts } = props; /* profile, posts */\r\n        const {status, editMode, toggleEditMode, newStatusText, updateStatus} = props; /* status */\r\n        return (\r\n            <div>\r\n                <ProfileInfo addPost={addPost} changePostText={changePostText} newPostText={newPostText} profile={profile} status={status} statusEditMode={editMode} toggleEditModeStatus={toggleEditMode} newStatusText={newStatusText} updateStatus={updateStatus}/>\r\n                <Posts posts={posts} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Profile;","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\nimport { addPost, changePostText, getProfile, toggleEditMode, setProfile, setStatus, newStatusText, updateStatus } from '../../redux/reducers/profileReducer/profileReducer';\r\nimport { isAuthSelector, userIdSelector } from '../../redux/selector/authSelector';\r\nimport { editModeSelector, newPostTextSelector, postsSelector, profileSelector, statusSelector } from '../../redux/selector/profileSelector';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport Profile from './Profile';\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: postsSelector(state),\r\n        newPostText: newPostTextSelector(state),\r\n        profile: profileSelector(state),\r\n        status: statusSelector(state),\r\n        editMode: editModeSelector(state),\r\n        isAuth:isAuthSelector(state),\r\n        userId: userIdSelector(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost,changePostText, getProfile, toggleEditMode, newStatusText, setProfile, setStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(Profile);"],"sourceRoot":""}