{"version":3,"sources":["Components/Users/UserItem/userItem.module.scss","common/paginator/paginator.module.scss","redux/selector/userSelector.js","Components/Users/UserItem/UserItem.js","common/paginator/paginator.js","Components/Users/users.js","Components/Users/index.js","Components/Users/usersService.js","Components/Users/usersContainer.js"],"names":["module","exports","userSelector","state","usersReducer","users","pageSizeSelector","pageSize","totalUserCountSelector","totalUserCount","currentPageSelector","currentPage","followingInProgressSelector","followingInProgress","isLoadingSelector","isLoading","UserItem","id","name","photos","status","followed","Follow","Unfollow","className","userStyle","user","avatar","src","alt","content","first","to","disabled","some","key","onClick","Pagination","totalItemsCount","onPageChanged","portionSize","pagesAmount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","style","pagination","prev","filter","p","map","active","item","next","Users","getPages","followThunk","unFollowThunk","allUsers","u","uniqueUrlName","small","large","inner","UsersService","getNewPage","page","props","this","getUsers","loading","Component","UsersContainer","connect","setUsers","updatePages","loadUsers","followProgress"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,KAAO,uBAAuB,MAAQ,wBAAwB,OAAS,yBAAyB,QAAU,0BAA0B,KAAO,uBAAuB,KAAO,uBAAuB,MAAQ,0B,oBCA1PD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,KAAO,wBAAwB,OAAS,0BAA0B,KAAO,wBAAwB,KAAO,0B,6DCDxJC,EAAe,SAACC,GACzB,OAAOA,EAAMC,aAAaC,OAEjBC,EAAmB,SAACH,GAC7B,OAAOA,EAAMC,aAAaG,UAEjBC,EAAyB,SAACL,GACnC,OAAOA,EAAMC,aAAaK,gBAEjBC,EAAsB,SAACP,GAChC,OAAOA,EAAMC,aAAaO,aAEjBC,EAA8B,SAACT,GACxC,OAAOA,EAAMC,aAAaS,qBAEjBC,EAAoB,SAACX,GAC9B,OAAOA,EAAMC,aAAaW,W,wECefC,EA3BE,SAAC,GAAiI,IAAhIC,EAA+H,EAA/HA,GAAIC,EAA2H,EAA3HA,KAA4BC,EAA+F,EAA/FA,OAAsBC,EAAyE,EAAzEA,OAAoBC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,SAAUV,EAAyB,EAAzBA,oBACrH,OACI,sBAAKI,GAAE,eAAUA,GAAeO,UAAWC,IAAUC,KAArD,UACI,qBAAKF,UAAWC,IAAUE,OAA1B,SACI,qBAAKC,IAAe,MAAVT,EAAiBA,EAAS,2CAA4CU,IAAI,iBAExF,sBAAKL,UAAWC,IAAUK,QAA1B,UACI,qBAAKN,UAAWC,IAAUM,MAA1B,SACI,cAAC,IAAD,CAASP,UAAWC,IAAUP,KAAMc,GAAI,YAAcf,EAAtD,SACKC,MAMT,gCACEG,EAEI,wBAAQY,SAAUpB,EAAoBqB,MAAK,SAAAC,GAAG,OAAGA,IAAQlB,KAAKmB,QAAS,WAAQb,EAASN,IAAxF,sBADA,wBAAQgB,SAAUpB,EAAoBqB,MAAK,SAAAC,GAAG,OAAGA,IAAQlB,KAAKmB,QAAS,WAAQd,EAAOL,IAAtF,oBAEF,oCACuBG,aAlBPH,I,2BCkErBoB,EAtEE,SAAC,GAId,IAJ6F,IAA9EC,EAA6E,EAA7EA,gBAAiB/B,EAA4D,EAA5DA,SAAUI,EAAkD,EAAlDA,YAAa4B,EAAqC,EAArCA,cAAqC,IAAtBC,mBAAsB,MAAR,GAAQ,EAExFC,EAAcC,KAAKC,KAAKL,EAAkB/B,GAC1CqC,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAaI,IAC9BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAcD,GARiD,EASpDQ,mBAAS,GAT2C,mBASvFC,EATuF,KASxEC,EATwE,KAUxFC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAE7C,OACI,sBAAKhB,UAAW6B,IAAMC,WAAtB,UAEQL,EAAgB,GAChB,qBAAKzB,UAAW6B,IAAME,KAAMnB,QAAS,WAAMc,EAAiBD,EAAgB,MAG5EL,EAAMY,QAAO,SAAAC,GAAC,OAAIA,GAAKN,GAAyBM,GAAKL,KAAwBM,KAAK,SAAED,GAChF,OACI,qBAAKxC,GAAIwC,EAAWjC,UAAWb,IAAgB8C,EAAIJ,IAAMM,OAASN,IAAMO,KAAMxB,QAAS,WAAOG,EAAckB,IAA5G,SACKA,GADYA,MAOzBV,EAAeE,GACf,qBAAKzB,UAAW6B,IAAMQ,KAAMzB,QAAS,WAAMc,EAAiBD,EAAgB,UCD7Ea,EA1BD,SAAC,GAAuB,IAAtB3D,EAAqB,EAArBA,MAAO4D,EAAc,EAAdA,SACZ1D,EAAgDF,EAAhDE,MAAOE,EAAyCJ,EAAzCI,SAAUE,EAA+BN,EAA/BM,eAAgBE,EAAeR,EAAfQ,YACjCqD,EAAmD7D,EAAnD6D,YAAaC,EAAsC9D,EAAtC8D,cAAepD,EAAuBV,EAAvBU,oBAE/BqD,EAAW7D,EAAMqD,KAAI,SAAAS,GAAC,OACtB,cAAC,EAAD,CAEIlD,GAAIkD,EAAElD,GACNC,KAAMiD,EAAEjD,KACRkD,cAAeD,EAAEC,cACjBjD,OAAyB,MAAjBgD,EAAEhD,OAAOkD,MAAeF,EAAEhD,OAAOkD,MAAQF,EAAEhD,OAAOmD,MAE1DjD,SAAU8C,EAAE9C,SACZC,OAAQ0C,EACRzC,SAAU0C,EACVpD,oBAAqBA,GAThBsD,EAAElD,OAWf,OACI,sBAAKO,UAAWC,IAAUpB,MAA1B,UACI,qBAAKmB,UAAWC,IAAU8C,MAA1B,SACKL,IAEL,cAAC,EAAD,CAAY3D,SAAUA,EAAU+B,gBAAiB7B,EAAgBE,YAAaA,EAAa4B,cAAewB,Q,QC1BvGS,E,4MCUXC,WAAa,SAACC,GACV,IAAMC,EAAQ,EAAKA,OAGnBZ,EAFmBY,EAAZZ,UAEEW,EADUC,EAAZpE,W,uDATX,WACI,IAAMoE,EAAQC,KAAKD,OAGnBE,EAFmBF,EAAZE,UACyBF,EAAzBhE,YAAyBgE,EAAZpE,Y,oBASxB,WACI,IAAMoE,EAAQC,KAAKD,MACZ5D,EAAa4D,EAAb5D,UACD+D,EAAU/D,EAAY,cAAC,IAAD,IAAa,KACnCe,EAAWf,EAAiE,KAArD,cAAC,EAAD,CAAOZ,MAAOwE,EAAOZ,SAAUa,KAAKH,aACjE,OACI,gCACKK,EACAhD,S,GArBUiD,aCUrBC,EAAiBC,aAVD,SAAC9E,GACnB,MAAO,CACHE,MAAOH,EAAaC,GACpBI,SAAUD,EAAiBH,GAC3BM,eAAgBD,EAAuBL,GACvCQ,YAAaD,EAAoBP,GACjCY,UAAWD,EAAkBX,GAC7BU,oBAAqBD,EAA4BT,MAGT,CAC5CmB,WACAC,aACA2D,aACAC,gBACAC,cACAC,mBACAR,aACAd,aACAC,gBACAC,mBAVmBgB,CAWpBT,GACYQ","file":"static/js/4.775f3dea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"userItem_users__10bSI\",\"user\":\"userItem_user__21ntH\",\"inner\":\"userItem_inner__22fIW\",\"avatar\":\"userItem_avatar__2-LJJ\",\"content\":\"userItem_content__2H43W\",\"name\":\"userItem_name__337Gd\",\"city\":\"userItem_city__LDGQx\",\"first\":\"userItem_first__3z2Y2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"paginator_pagination__CqhiY\",\"item\":\"paginator_item__1i78J\",\"active\":\"paginator_active__1JKrb\",\"next\":\"paginator_next__3DkZs\",\"prev\":\"paginator_prev__1DbI8\"};","export const userSelector = (state) => {\r\n    return state.usersReducer.users\r\n}\r\nexport const pageSizeSelector = (state) => {\r\n    return state.usersReducer.pageSize\r\n}\r\nexport const totalUserCountSelector = (state) => {\r\n    return state.usersReducer.totalUserCount\r\n}\r\nexport const currentPageSelector = (state) => {\r\n    return state.usersReducer.currentPage\r\n}\r\nexport const followingInProgressSelector = (state) => {\r\n    return state.usersReducer.followingInProgress\r\n}\r\nexport const isLoadingSelector = (state) => {\r\n    return state.usersReducer.isLoading\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userStyle from './userItem.module.scss';\r\n\r\nconst UserItem = ({id, name,  /* uniqueUrlName, */ photos, /* cereer, */ status, /* city, */ followed, Follow, Unfollow, followingInProgress}) => {\r\n    return (\r\n        <div id={`user-${id}`} key={id} className={userStyle.user}>\r\n            <div className={userStyle.avatar}>\r\n                <img src={photos != null ? photos : \"https://html5css.ru/w3images/avatar2.png\"} alt=\"userAvatar\" />\r\n            </div>\r\n            <div className={userStyle.content}>\r\n                <div className={userStyle.first}>\r\n                    <NavLink className={userStyle.name} to={'/profile/' + id}>\r\n                        {name}\r\n                    </NavLink>\r\n                    {/* <div className={userStyle.city}>\r\n                        {city}\r\n                    </div> */}\r\n                </div>\r\n                <div>\r\n                {!followed\r\n                    ? <button disabled={followingInProgress.some(key=> key === id)} onClick={() => { Follow(id) }}>Follow</button>\r\n                    : <button disabled={followingInProgress.some(key=> key === id)} onClick={() => { Unfollow(id) }}>Unfollow</button>}\r\n                    <div>\r\n                        {/* {cereer}, */} {status}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UserItem;","import { useState } from \"react\";\r\nimport style from './paginator.module.scss';\r\nlet Pagination = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesAmount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesAmount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesAmount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    \r\n    return (\r\n        <div className={style.pagination}>\r\n            {\r\n                portionNumber > 1 &&\r\n                <div className={style.prev} onClick={()=>{ setPortionNumber(portionNumber - 1) }}></div>\r\n            }\r\n            {\r\n                pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map( ( p ) => {\r\n                    return (\r\n                        <div id={p} key={p} className={currentPage === p ? style.active : style.item} onClick={() => {onPageChanged(p)}}>\r\n                            {p}\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                portionCount > portionNumber &&\r\n                <div className={style.next} onClick={()=>{ setPortionNumber(portionNumber + 1) }}></div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n    /* if (pagination) {\r\n        return pagination;\r\n    } */\r\n    \r\n    /* if (pagination) {\r\n        let lastPagiItem = pagination[pagination.length - 1];\r\n        let nextItems = pagination.slice(currentPage - 1, currentPage + 3);\r\n        let prevItem = pagination.slice(currentPage - 3, currentPage - 1);\r\n        let first = pagination[0];\r\n        let dots = [1,2,3];\r\n        let getDots = dots.map(d => {\r\n            return  <div\r\n                        className={style.dots}>\r\n                        {d = '.'}\r\n                    </div>\r\n        })\r\n        let fullPagi = [prevItem ,nextItems, getDots, lastPagiItem];\r\n        (currentPage === 3) ? prevItem = pagination.slice(currentPage - 2, currentPage - 1) : prevItem = pagination.slice(currentPage - 3, currentPage - 1);\r\n        (currentPage === 1) ? fullPagi =  [prevItem ,nextItems, getDots, lastPagiItem] : fullPagi =  [first, prevItem ,nextItems, getDots, lastPagiItem];\r\n        if (currentPage > 2) if (lastPagiItem.key) {\r\n            if (lastPagiItem.props.id === currentPage + 3) {\r\n                return fullPagi = [first, prevItem, nextItems];\r\n            } else if (lastPagiItem.props.id === currentPage + 2) {\r\n                return fullPagi = [first, prevItem, nextItems];\r\n            } else if (lastPagiItem.props.id === currentPage + 1) {\r\n                return fullPagi = [first, prevItem, nextItems];\r\n            }else if (lastPagiItem.props.id === currentPage) {\r\n                return fullPagi = [first, prevItem, nextItems];\r\n            } else {\r\n                return fullPagi = [first, prevItem ,nextItems, getDots, lastPagiItem];\r\n            }\r\n        }\r\n        return fullPagi;\r\n    } */\r\n}\r\nexport default Pagination;\r\n/* const getPagination = (pages, currentPage, getPages, style) => {\r\n    debugger\r\n    const paginationBrute = (page) => {\r\n        getPages(page)\r\n        setPagination();\r\n    }\r\n\r\n    let pagination = pages.map(p => {\r\n        return <div \r\n                    className={currentPage === p ? style.active : style.item} \r\n                    id={p} \r\n                    key={p} \r\n                    onClick={() => {paginationBrute(p)}}\r\n                    >\r\n                    {p}\r\n                </div>\r\n    });\r\n    return setPagination(pagination, currentPage, style)\r\n}\r\nexport default getPagination; */","import React from 'react';\r\nimport UserItem from './UserItem/UserItem';\r\nimport userStyle from './UserItem/userItem.module.scss';\r\nimport Pagination from '../../common/paginator/paginator';\r\n\r\nconst Users = ({state, getPages}) => {\r\n    const {users, pageSize, totalUserCount, currentPage} = state;\r\n    const {followThunk, unFollowThunk, followingInProgress} = state;\r\n    \r\n    let allUsers = users.map(u=> \r\n        <UserItem \r\n            key={u.id} \r\n            id={u.id} \r\n            name={u.name} \r\n            uniqueUrlName={u.uniqueUrlName} \r\n            photos={u.photos.small !=null ? u.photos.small : u.photos.large}\r\n            /* status={u.status}  */\r\n            followed={u.followed} \r\n            Follow={followThunk} \r\n            Unfollow={unFollowThunk} \r\n            followingInProgress={followingInProgress}\r\n        />)\r\n    return (\r\n        <div className={userStyle.users}>\r\n            <div className={userStyle.inner}>\r\n                {allUsers}\r\n            </div>\r\n            <Pagination pageSize={pageSize} totalItemsCount={totalUserCount} currentPage={currentPage} onPageChanged={getPages} />\r\n        </div>\r\n    )\r\n}\r\nexport default Users;","import UsersService from './usersService';\r\nexport default UsersService;","import React, { Component } from 'react';\r\nimport Users from './users';\r\nimport Loading from '../../common/loading/index';\r\n\r\nclass UsersService extends Component {\r\n    componentDidMount() {\r\n        const props = this.props;\r\n        const {getUsers} = props;\r\n        const {currentPage, pageSize} = props;\r\n        getUsers(currentPage, pageSize);\r\n    }\r\n    getNewPage = (page) => {\r\n        const props = this.props;\r\n        const {getPages} = props;\r\n        const {pageSize} = props;\r\n        getPages(page, pageSize);\r\n    }\r\n    render() {\r\n        const props = this.props;\r\n        const {isLoading} = props;\r\n        const loading = isLoading ? <Loading/> : null;\r\n        const content = !isLoading ? <Users state={props} getPages={this.getNewPage} /> : null;\r\n        return (\r\n            <div>\r\n                {loading}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UsersService;","import {connect} from 'react-redux';\r\nimport {Follow, Unfollow, setUsers, updatePages, loadUsers, followProgress, getUsers, getPages, followThunk, unFollowThunk} from '../../redux/reducers/usersReducer/usersReducer';\r\nimport { currentPageSelector, followingInProgressSelector, pageSizeSelector, totalUserCountSelector, userSelector, isLoadingSelector } from '../../redux/selector/userSelector';\r\nimport UsersService from './index';\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: userSelector(state),\r\n        pageSize: pageSizeSelector(state),\r\n        totalUserCount: totalUserCountSelector(state),\r\n        currentPage: currentPageSelector(state),\r\n        isLoading: isLoadingSelector(state),\r\n        followingInProgress: followingInProgressSelector(state)\r\n    }\r\n}\r\nconst UsersContainer = connect(mapStateToProps, {\r\n    Follow,\r\n    Unfollow,\r\n    setUsers,\r\n    updatePages,\r\n    loadUsers,\r\n    followProgress,\r\n    getUsers, \r\n    getPages,\r\n    followThunk,\r\n    unFollowThunk\r\n})(UsersService);\r\nexport default UsersContainer;"],"sourceRoot":""}