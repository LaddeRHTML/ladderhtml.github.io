{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/hoc/withAuthRedirect.js","Components/Content/MyPosts/Post/post.module.scss","Components/Content/MyPosts/posts.module.scss","Components/Content/ProfileInfo/profileInfo.module.scss","redux/selector/profileSelector.js","Components/Content/MyPosts/Post/index.js","Components/Content/MyPosts/Post/post.js","Components/Content/MyPosts/index.js","Components/Content/MyPosts/posts.js","Components/Content/ProfileInfo/ProfileStatus/profileStatusWithHooks.js","Components/Content/ProfileInfo/Contacts/contacts.js","Components/Content/ProfileInfo/ProfileData/profileDataItem/profileDataItem.js","Components/Content/ProfileInfo/profileDataForm/profileDataForm.js","Components/Content/ProfileInfo/ProfileData/profileData.js","Components/Content/ProfileInfo/profileInfoAvatar/profileInfoAvatar.js","Components/Content/ProfileInfo/profileInfo.js","Components/Content/Profile/index.js","Components/Content/Profile/profile.js","Components/Content/profileContainer.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","mapStateToPropsForRedirect","state","isAuth","authReducer","withAuthRedirect","Component","connect","props","to","module","exports","postsSelector","profileReducer","posts","newPostTextSelector","newPostText","profileSelector","profile","statusSelector","status","editModeSelector","editMode","Post","message","likes","name","avatar","id","className","postStyle","post","head","src","alt","right","href","time","footer","like","Posts","React","memo","fullName","photos","newPosts","map","p","small","ProfileStatusWithHooks","updateStatus","useState","changeEditMode","setStatus","useEffect","toggleEditMode","boolean","autoFocus","onBlur","onChange","e","currentTarget","onClick","Contacts","contactTitle","contactValue","s","profileItem","aboutItem","aboutDescr","rel","target","ContactsEdit","placeholder","Field","component","Input","validate","requiredField","ProfileDataItem","item","itemDescr","plug","ProfileDataItemCheckbox","search","dontSearch","ProfileDataItemInput","type","ProfileDataForm","handleSubmit","turnOffEditMode","isOwner","onSubmit","profileFooter","profileDescr","editInfoTitle","backButton","keys","contacts","key","reduxForm","form","ProfileData","goToEditMode","moreInfo","toggleMoreInfo","showMoreInfo","aboutMe","lookingForAJob","lookingForAJobDescription","upStage","editButton","moreInfoBtn","downStage_active","downStage","Avatar","onGetNewFile","avatarInner","large","AvatarBtn","avatarWrap","avatarInput","maxLength","maxLengthCreator","PostsForm","writeMode","toggleWriteMode","changeWriteMode","pStyle","profileFooter__postwrite","profile__addPostAvatar","profile__addPostTextarea","TextArea","ProfileInfo","statusEditMode","toggleEditModeStatus","newStatusText","addPost","sendPhoto","updateProfileData","formData","a","profileInfo","files","profileInner","profileHeader","profileHeader__name","profileHeader__status","initialValues","values","postInput","Profile","this","setProfile","userId","match","params","refreshProfile","prevProps","changePostText","compose","isAuthSelector","userIdSelector","getProfile","withRouter"],"mappings":"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","file":"static/js/3.6dcd14ae.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let authRedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={'/login'} />\r\n        \r\n        return <Component {...props}/>\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(authRedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__15KVg\",\"head\":\"post_head__LDpoy\",\"right\":\"post_right__2rAAv\",\"avatar\":\"post_avatar__3m-Wn\",\"name\":\"post_name__2qvA2\",\"link\":\"post_link__1Ai1y\",\"message\":\"post_message__3u9rH\",\"footer\":\"post_footer__3lim3\",\"likes\":\"post_likes__axT9W\",\"like\":\"post_like__3kSaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"posts_posts__RT5fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"profileInfo_profileInfo__3fSaH\",\"profileInner\":\"profileInfo_profileInner__YMXLJ\",\"profileFooter\":\"profileInfo_profileFooter__3zR4c\",\"profileFooter__postwrite\":\"profileInfo_profileFooter__postwrite__295hf\",\"backButton\":\"profileInfo_backButton__2PAEr\",\"profile__addPostAvatar\":\"profileInfo_profile__addPostAvatar__2TDyz\",\"profile__addPostTextarea\":\"profileInfo_profile__addPostTextarea__3zD7B\",\"profileDescr\":\"profileInfo_profileDescr__3XFhB\",\"profileItem\":\"profileInfo_profileItem__1wfj_\",\"aboutItem\":\"profileInfo_aboutItem__3yL9A\",\"aboutDescr\":\"profileInfo_aboutDescr__3grvf\",\"editButton\":\"profileInfo_editButton__10Yru\",\"profileHeader\":\"profileInfo_profileHeader__18joT\",\"profileHeader__name\":\"profileInfo_profileHeader__name__3PaNT\",\"profileHeader__status\":\"profileInfo_profileHeader__status__3aCJz\",\"avatar\":\"profileInfo_avatar__1gR6k\",\"avatarWrap\":\"profileInfo_avatarWrap__2VpOr\",\"avatarInput\":\"profileInfo_avatarInput__vWL74\",\"avatarInner\":\"profileInfo_avatarInner__4Y3Ul\",\"editInfoTitle\":\"profileInfo_editInfoTitle__29l_3\",\"moreInfoBtn\":\"profileInfo_moreInfoBtn__Ts23Q\",\"upStage\":\"profileInfo_upStage__2cQ8a\",\"downStage\":\"profileInfo_downStage__CyT1k\",\"downStage_active\":\"profileInfo_downStage_active__iXPK6\"};","export const postsSelector = (state) => {\r\n    return state.profileReducer.posts\r\n}\r\nexport const newPostTextSelector = (state) => {\r\n    return state.profileReducer.newPostText\r\n}\r\nexport const profileSelector = (state) => {\r\n    return state.profileReducer.profile\r\n}\r\nexport const statusSelector = (state) => {\r\n    return state.profileReducer.status\r\n}\r\nexport const editModeSelector = (state) => {\r\n    return state.profileReducer.editMode\r\n}\r\nexport const userIdSelector = (state) => {\r\n    return state.profileReducer.userId\r\n}","import Post from './post';\r\nexport default Post;","import React from 'react';\r\nimport postStyle from './post.module.scss'\r\nconst Post = ({message, likes, name, avatar, id}) => {\r\n    return (\r\n            <div id={id} className={postStyle.post}>\r\n                <div className={postStyle.head}>\r\n                    <div className={postStyle.avatar}>\r\n                        <img src={avatar != null ? avatar : 'https://html5css.ru/w3images/avatar2.png'} alt=\"myMiniAvatar\" />\r\n                    </div>\r\n                    <div className={postStyle.right}>\r\n                        <a className={postStyle.name} href=\"#\">{name}</a>\r\n                        <a className={postStyle.time} href=\"#\" >Сегодня в 13:37</a>\r\n                    </div>\r\n                </div>\r\n                <div className={postStyle.message}>\r\n                    {message}\r\n                </div>\r\n                <div className={postStyle.footer}>\r\n                    <div className={postStyle.likes}>\r\n                        <button className={postStyle.like}/><div>{likes}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Post;","import Posts from './posts';\r\nexport default Posts;","import React from 'react';\r\nimport Post from './Post';\r\nimport p from './posts.module.scss';\r\nconst Posts = React.memo(({ posts, profile }) => {\r\n    let { fullName, photos } = profile;\r\n    let newPosts = posts.map(p => <Post key={p.id} id={p.id} message={p.message} name={fullName} avatar={photos.small} likes={p.likes} />)\r\n    return (\r\n        <div className={p.posts}>\r\n            {newPosts}\r\n        </div>\r\n    )\r\n})\r\nexport default Posts;","import React, { useEffect, useState } from 'react';\r\nconst ProfileStatusWithHooks = (props) =>  {\r\n    /* state = {\r\n        status: '',\r\n        editMode: false\r\n    }\r\n    toggleEditMode = () => {\r\n        this.setState({...this.state, editMode: !this.state.editMode});\r\n    }\r\n    newStatusText = (text) => {\r\n        this.setState({...this.state, status: text});\r\n    } */\r\n    /* const { status, editMode, toggleEditMode, newStatusText,updateStatus} = props; */\r\n    const {updateStatus} = props;\r\n\r\n    /* let statusBar = React.createRef();\r\n    const getText = () => {\r\n        let text = statusBar.current.value;\r\n        newStatusText(text);\r\n    }\r\n    const newStatus = () => {\r\n        let text = statusBar.current.value;\r\n        toggleEditMode(false)\r\n        updateStatus(text);\r\n    } */\r\n    let [editMode, changeEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    /* debugger */\r\n    const toggleEditMode = (boolean) => {\r\n        changeEditMode(boolean);\r\n    }\r\n\r\n    const getText = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n        /* let text = statusBar.current.value; */\r\n        /* newStatusText(text); */\r\n    }\r\n\r\n    const newStatus = () => {\r\n        /* let text = statusBar.current.value; */\r\n        toggleEditMode(false)\r\n        updateStatus(status);\r\n    }\r\n\r\n    return (\r\n        <div className=\"status\">\r\n            { editMode ? \r\n                <div>\r\n                    <input autoFocus onBlur={newStatus} value={status} onChange={getText}></input>\r\n                </div>\r\n                : \r\n                <div onClick={()=> toggleEditMode(true)}>\r\n                    <span>\r\n                        {status ? status : 'Установить статус'}\r\n                    </span>\r\n                </div> \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import { Field } from \"redux-form\"\r\nimport { Input } from \"../../../../common/Textarea/formChilds\"\r\nimport { requiredField } from \"../../../../utils/validator\"\r\n\r\nexport const Contacts = ({contactTitle, contactValue, s}) => {\r\n    return (\r\n        <div className={s.profileItem}><div className={s.aboutItem}>{contactTitle}:</div>{contactValue ? <a className={s.aboutDescr} href={contactValue} rel=\"noreferrer\" target='_blank'>{contactValue}</a> : <div className={s.aboutDescr}>Пусто</div>}</div>\r\n    )\r\n}\r\nexport const ContactsEdit = ({contactTitle, placeholder, name, s}) => {\r\n    return (\r\n        <div className={s.profileItem}><div className={s.aboutItem}>{contactTitle}</div><Field component={Input} placeholder={placeholder ? placeholder : 'Ссылка'} name={name} validate={[requiredField]} /></div>\r\n    )\r\n}","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { Input } from '../../../../../common/Textarea/formChilds';\r\nimport { requiredField } from '../../../../../utils/validator';\r\n\r\nexport const ProfileDataItem = ({item, itemDescr, plug, s}) => {\r\n    return (\r\n        <div className={s.profileItem}>\r\n            <div className={s.aboutItem}>{itemDescr}</div><div className={s.aboutDescr}>{{item} ? item : {plug} }</div>\r\n        </div>\r\n    )\r\n}\r\nexport const ProfileDataItemCheckbox = ({item, itemDescr, search, dontSearch, s}) => {\r\n    return (\r\n        <div className={s.profileItem}>\r\n            <div className={s.aboutItem}>{itemDescr}</div><div className={s.aboutDescr}>{item ? search : dontSearch }</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ProfileDataItemInput = ({itemDescr, name, placeholder, type, s}) => {\r\n    return (\r\n        <div className={s.profileItem}><div className={s.aboutItem}>{itemDescr}</div><div className={s.aboutDescr}><Field type={type ? 'checkbox' : 'input'} component={Input} placeholder={placeholder} name={name} validate={[requiredField]} /></div></div>\r\n    )\r\n}","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { ContactsEdit } from '../Contacts/contacts';\r\nimport { ProfileDataItemInput } from '../ProfileData/profileDataItem/profileDataItem';\r\n\r\n\r\nlet ProfileDataForm = ({s, handleSubmit, profile, turnOffEditMode, isOwner}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.profileFooter}>\r\n            <div className={s.profileDescr}><div className={s.editInfoTitle}>Основная информация</div>{isOwner ? <div className={s.backButton} onClick={turnOffEditMode}>Назад</div> : null}</div>\r\n            <ProfileDataItemInput itemDescr='Полное имя:' name='fullName' placeholder=\"Полное имя\" s={s} />\r\n            <ProfileDataItemInput itemDescr='Обо мне:' name='aboutMe' placeholder=\"Обо мне\" s={s} /> \r\n            <div className={s.profileDescr}><div className={s.editInfoTitle}>Рабочая информация</div></div>\r\n            <ProfileDataItemInput itemDescr='Ищу Работу:' name='lookingForAJob' placeholder=\"Ищу работу\" type='checkbox' s={s} />\r\n            <ProfileDataItemInput itemDescr='Мои навыки:' name='lookingForAJobDescription' placeholder=\"Опишите работу\" s={s}/> \r\n            <div className={s.profileDescr}><div className={s.editInfoTitle}>Контактная информация</div></div>\r\n            {Object.keys(profile.contacts).map( key => { return <ContactsEdit key={key} contactTitle={key} placeholder={profile.contacts[key]} name={'contacts.' + key} s={s} /> })}\r\n            <button type=\"submit\" >Сохранить</button>\r\n        </form>\r\n    )\r\n}\r\nProfileDataForm = reduxForm({\r\n    form: 'profileData'\r\n})(ProfileDataForm)\r\nexport default ProfileDataForm;","import React, { useState } from 'react';\r\nimport { Contacts } from '../Contacts/contacts';\r\nimport { ProfileDataItem, ProfileDataItemCheckbox } from './profileDataItem/profileDataItem';\r\n\r\nexport const ProfileData = ({profile, isOwner, goToEditMode, s}) => {\r\n\r\n    let [moreInfo, toggleMoreInfo] = useState(false);\r\n\r\n    const showMoreInfo = (boolean) => {\r\n        toggleMoreInfo(boolean)\r\n    }\r\n\r\n    const {fullName, aboutMe, lookingForAJob, lookingForAJobDescription} = profile;\r\n    return (\r\n        <div className={s.profileFooter}>\r\n            <div className={s.upStage}>\r\n                <div className={s.profileDescr}><div className={s.editInfoTitle}>Основная информация</div>{isOwner ? <div className={s.editButton} onClick={goToEditMode}>Редактировать</div> : null}</div>\r\n                <ProfileDataItem itemDescr='Полное имя:' item={fullName} plug='Имя' s={s} />\r\n                <ProfileDataItem itemDescr='Обо мне:' item={aboutMe} plug='Инфы нет ;(' s={s} />\r\n            </div>\r\n            {moreInfo ? <div className={s.moreInfoBtn} onClick={ () => showMoreInfo(false)} >Скрыть подробную информацию</div> : <div className={s.moreInfoBtn} onClick={ () => showMoreInfo(true)} >Показать подробную информацию</div>}\r\n            <div className={moreInfo ? s.downStage_active : s.downStage}>\r\n                <div className={s.profileDescr}><div className={s.editInfoTitle}>Рабочая информация</div></div>\r\n                <ProfileDataItemCheckbox itemDescr='Ищу работу:' item={lookingForAJob} search='Ищу' dontSearch='Не ищу' s={s} />\r\n                <ProfileDataItem itemDescr='Мои навыки:' item={lookingForAJobDescription} plug='Нет описания' s={s} />\r\n                <div className={s.profileDescr}><div className={s.editInfoTitle}>Контактная информация</div></div>\r\n                {Object.keys(profile.contacts).map( key => { return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} s={s} />})}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nconst Avatar = ({isOwner, onGetNewFile, profile, s}) => {\r\n    return (\r\n        <div className={s.avatarInner}>\r\n            <div className={s.avatar}>\r\n                <img src={profile.photos.large ? profile.photos.large : 'https://html5css.ru/w3images/avatar2.png'} alt=\"myAvatar\" />\r\n            </div>\r\n            {isOwner && <AvatarBtn onGetNewFile={onGetNewFile} s={s} />}\r\n        </div>\r\n    )\r\n}\r\nexport default Avatar;\r\n\r\nconst AvatarBtn = ({onGetNewFile, s}) => {\r\n    return (\r\n        <button className={s.avatarWrap}><input className={s.avatarInput} type={'file'} onChange={onGetNewFile} /> Выбать файл</button>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport pStyle from './profileInfo.module.scss';\r\nimport ProfileStatusWithHooks from './ProfileStatus/profileStatusWithHooks';\r\nimport {maxLengthCreator, requiredField} from '../../../utils/validator';\r\nimport { TextArea } from '../../../common/Textarea/formChilds';\r\nimport ProfileDataForm from './profileDataForm/profileDataForm';\r\nimport { ProfileData } from './ProfileData/profileData';\r\nimport Avatar from './profileInfoAvatar/profileInfoAvatar';\r\n\r\nconst maxLength = maxLengthCreator(100);\r\nlet PostsForm = ({ handleSubmit, avatar }) => {\r\n\r\n    let [writeMode, toggleWriteMode] = useState(false);\r\n\r\n    const changeWriteMode = (boolean) => {\r\n        toggleWriteMode(boolean)\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={pStyle.profileFooter__postwrite}>\r\n            <div className={pStyle.profile__addPostAvatar}>\r\n                <img src={avatar != null ? avatar : 'https://html5css.ru/w3images/avatar2.png'} alt=\"myMiniAvatar\" />\r\n            </div>\r\n            <div className={pStyle.profile__addPostTextarea}>\r\n                <Field\r\n                    name=\"postInput\"\r\n                    component={TextArea}\r\n                    type=\"text\"\r\n                    placeholder=\"Чем хотите поделиться?\"\r\n                    validate={[requiredField, maxLength]}\r\n                    onClick={() => changeWriteMode(true)}\r\n                    onBlur={() => changeWriteMode(false)}\r\n                />\r\n                {writeMode ? <button type=\"sumbit\" >Опубликовать</button> : null}\r\n            </div>\r\n        </form>\r\n        \r\n    )\r\n}\r\nPostsForm = reduxForm({\r\n    form: 'post-form'\r\n})(PostsForm)\r\nconst ProfileInfo = ({status, statusEditMode, toggleEditModeStatus, newStatusText, updateStatus, addPost, profile, isOwner, sendPhoto, updateProfileData}) => {\r\n\r\n    let [editMode, changeEditMode] = useState(false);\r\n\r\n    let addNewPost = (values) => {\r\n        addPost(values.postInput);\r\n    }\r\n\r\n    const onGetNewFile = (e) => {\r\n        if (e.target.files.length) {\r\n            sendPhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (formData) => {\r\n        await updateProfileData(formData)\r\n        changeEditMode(false)\r\n    } \r\n    \r\n    return (\r\n        <div className={pStyle.profileInfo}>\r\n            <Avatar isOwner={isOwner} onGetNewFile={onGetNewFile} s={pStyle} profile={profile} />\r\n            <div className={pStyle.profileInner}>\r\n                <div className={pStyle.profileHeader}>\r\n                    <div className={pStyle.profileHeader__name}>\r\n                        {profile.fullName}\r\n                    </div>\r\n                    <div className={pStyle.profileHeader__status}>\r\n                        <ProfileStatusWithHooks status={status} editMode={statusEditMode} toggleEditMode={toggleEditModeStatus} newStatusText={newStatusText} updateStatus={updateStatus}/>\r\n                    </div>\r\n                    {\r\n                        editMode ? \r\n                            <ProfileDataForm turnOffEditMode={() => changeEditMode(false)} initialValues={profile} s={pStyle} onSubmit={onSubmit} profile={profile} isOwner={isOwner} /> \r\n                                : \r\n                            <ProfileData goToEditMode={() => changeEditMode(true)} isOwner={isOwner} profile={profile} s={pStyle} />\r\n                    }\r\n                </div>\r\n                <PostsForm onSubmit={addNewPost} avatar={profile.photos.small} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import Profile from './profile';\r\nexport default Profile;","import {Component} from 'react';\r\nimport Posts from '../MyPosts';\r\nimport ProfileInfo from '../ProfileInfo/profileInfo';\r\nimport Loading from '../../../common/loading/loading';\r\n\r\n\r\n\r\nclass Profile extends Component {\r\n    refreshProfile() {\r\n        const props = this.props;\r\n        const {setProfile, setStatus, match} = props;\r\n        \r\n        let userId = match.params.userId;\r\n        if (!userId) {\r\n            userId = props.userId;\r\n        }\r\n        setProfile(userId);\r\n        setStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n    render () {\r\n        const props = this.props;\r\n        const { addPost, changePostText, newPostText, profile, posts, match, sendPhoto, updateProfileData } = props; /* profile, posts */\r\n        const {status, editMode, toggleEditMode, newStatusText, updateStatus} = props; /* status */\r\n        let isOwner = !match.params.userId;\r\n        if (!profile) {\r\n            return (<Loading/>)\r\n        }\r\n        return (\r\n            <div>\r\n                <ProfileInfo updateProfileData={updateProfileData} sendPhoto={sendPhoto} isOwner={isOwner} addPost={addPost} changePostText={changePostText} newPostText={newPostText} profile={profile} status={status} statusEditMode={editMode} toggleEditModeStatus={toggleEditMode} newStatusText={newStatusText} updateStatus={updateStatus}/>\r\n                {isOwner ? <Posts posts={posts} profile={profile} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Profile;","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\nimport { addPost, changePostText, getProfile, toggleEditMode, setProfile, setStatus, newStatusText, updateStatus, sendPhoto, updateProfileData } from '../../redux/reducers/profileReducer/profileReducer';\r\nimport { isAuthSelector, userIdSelector } from '../../redux/selector/authSelector';\r\nimport { editModeSelector, newPostTextSelector, postsSelector, profileSelector, statusSelector } from '../../redux/selector/profileSelector';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport Profile from './Profile';\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: postsSelector(state),\r\n        newPostText: newPostTextSelector(state),\r\n        profile: profileSelector(state),\r\n        status: statusSelector(state),\r\n        editMode: editModeSelector(state),\r\n        isAuth:isAuthSelector(state),\r\n        userId: userIdSelector(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost,changePostText, getProfile, toggleEditMode, newStatusText, setProfile, setStatus, updateStatus, sendPhoto, updateProfileData }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(Profile);"],"sourceRoot":""}